{"ast":null,"code":"import _asyncToGenerator from \"/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet ProductsComponent = class ProductsComponent {\n  constructor(productService, formBuilder, authService, router) {\n    this.productService = productService;\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.currentPage = 0;\n    this.pageSize = 5;\n    this.totalPages = 0;\n    this.totalElements = 0;\n    this.roundNumber = value => {\n      return Math.round(value);\n    };\n    this.handleGetPageProduct = (keyword, page, size) => {\n      this.productService.getPageProductsByKeyword(keyword, page, size).subscribe({\n        next: data => {\n          this.products = data._embedded.products;\n          this.currentPage = data.page.number;\n          this.pageSize = data.page.size;\n          this.totalPages = data.page.totalPages;\n          this.totalElements = data.page.totalElements;\n        },\n        error: error => this.errorMessage = error.message\n      });\n    };\n    this.handleSearchPageProductsByKeyword = () => {\n      this.currentPage = 0;\n      this.productService.getPageProductsByKeyword(this.searchFormGroup.value.keyword, this.currentPage, this.pageSize).subscribe({\n        next: data => {\n          let {\n            products\n          } = data._embedded;\n          let {\n            number,\n            totalElements,\n            totalPages,\n            size\n          } = data.page;\n          this.products = products;\n          this.currentPage = number;\n          this.pageSize = size;\n          this.totalPages = totalPages;\n          this.totalElements = totalElements;\n        },\n        error: error => {\n          this.errorMessage = error.message;\n        }\n      });\n    };\n  }\n  ngOnInit() {\n    this.searchFormGroup = this.formBuilder.group({\n      keyword: this.formBuilder.control(\"\")\n    });\n    this.handleGetPageProduct(\"\", this.currentPage, this.pageSize);\n  }\n  handleDeleteProduct(product) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (confirm(\"Are you sure you want to delete this product\")) {\n        _this.productService.deleteProduct(product.id).subscribe(d => {\n          _this.productService.getPageProductsByKeyword();\n        });\n      }\n    })();\n  }\n  handleNewProduct() {\n    this.router.navigateByUrl(\"/admin/new-product\");\n  }\n  handleEditProduct(product) {\n    this.router.navigateByUrl(`/admin/edit-product/${product.id}`);\n  }\n};\nProductsComponent = __decorate([Component({\n  selector: \"app-products\",\n  templateUrl: \"./products.component.html\",\n  styleUrls: [\"./products.component.scss\"]\n})], ProductsComponent);\nexport { ProductsComponent };","map":{"version":3,"mappings":"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","names":["Component","ProductsComponent","constructor","productService","formBuilder","authService","router","value","Math","round","keyword","page","size","getPageProductsByKeyword","subscribe","next","data","products","_embedded","currentPage","number","pageSize","totalPages","totalElements","error","errorMessage","message","searchFormGroup","ngOnInit","group","control","handleGetPageProduct","handleDeleteProduct","product","confirm","deleteProduct","id","d","handleNewProduct","navigateByUrl","handleEditProduct","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/src/app/products/products.component.ts"],"sourcesContent":["import { AuthenticationService } from \"./../services/authentication.service\";\nimport { Product, PageProduct } from \"./../model/product.model\";\n\nimport { ProductService } from \"./../services/product.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-products\",\n  templateUrl: \"./products.component.html\",\n  styleUrls: [\"./products.component.scss\"],\n})\nexport class ProductsComponent implements OnInit {\n  products!: Array<Product>;\n  errorMessage!: String;\n  searchFormGroup!: FormGroup;\n  currentPage: number = 0;\n  pageSize: number = 5;\n  totalPages: number = 0;\n  totalElements: number = 0;\n  constructor(\n    private productService: ProductService,\n    private formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.searchFormGroup = this.formBuilder.group({\n      keyword: this.formBuilder.control(\"\"),\n    });\n    this.handleGetPageProduct(\"\", this.currentPage, this.pageSize);\n  }\n\n  async handleDeleteProduct(product: Product) {\n    if (confirm(\"Are you sure you want to delete this product\")) {\n      this.productService.deleteProduct(product.id).subscribe((d) => {\n        this.productService.getPageProductsByKeyword();\n      });\n    }\n  }\n  roundNumber = (value: number) => {\n    return Math.round(value);\n  };\n\n  handleGetPageProduct = (keyword: string, page: number, size: number) => {\n    this.productService\n      .getPageProductsByKeyword(keyword, page, size)\n      .subscribe({\n        next: (data) => {\n          this.products = data._embedded.products;\n          this.currentPage = data.page.number;\n          this.pageSize = data.page.size;\n          this.totalPages = data.page.totalPages;\n          this.totalElements = data.page.totalElements;\n        },\n        error: (error) => (this.errorMessage = error.message),\n      });\n  };\n\n  handleSearchPageProductsByKeyword = () => {\n    this.currentPage = 0;\n    this.productService\n      .getPageProductsByKeyword(\n        this.searchFormGroup.value.keyword,\n        this.currentPage,\n        this.pageSize\n      )\n      .subscribe({\n        next: (data: PageProduct) => {\n          let { products } = data._embedded;\n          let { number, totalElements, totalPages, size } = data.page;\n          this.products = products;\n          this.currentPage = number;\n          this.pageSize = size;\n          this.totalPages = totalPages;\n          this.totalElements = totalElements;\n        },\n        error: (error) => {\n          this.errorMessage = error.message;\n        },\n      });\n  };\n  handleNewProduct() {\n    this.router.navigateByUrl(\"/admin/new-product\");\n  }\n  handleEditProduct(product: Product) {\n    this.router.navigateByUrl(`/admin/edit-product/${product.id}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}