{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BillService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.lastKeyword = \"\";\n    this.lastPageSize = 5;\n    this.lastPageNumber = 0;\n    this.BaseURI = \"http://localhost:8888/BILLING-SERVICE/fullBill\";\n  }\n  ngOnInit() {}\n  deleteBill(billID) {\n    return this.httpClient.delete(`${this.BaseURI.replace(\"fullBill\", \"bills\")}/${billID}`);\n  }\n  addBill(name, email) {\n    return this.httpClient.post(`${this.BaseURI}`, {\n      name: name,\n      email: email\n    });\n  }\n  editBill(id, name, email) {\n    return this.httpClient.put(`${this.BaseURI}/${id}`, {\n      name: name,\n      email: email\n    });\n  }\n  getBillById(id) {\n    return this.httpClient.get(`${this.BaseURI}/${id}`);\n  }\n  getBillsByCustomerId(id, page = this.lastPageNumber, size = this.lastPageSize) {\n    this.lastCustomerID = id;\n    this.lastPageNumber = page;\n    this.lastPageSize = size;\n    return this.httpClient.get(`${this.BaseURI}/customer/${id}?page=${page}&size=${size}`);\n  }\n  getPageBills(page, size) {\n    this.lastPageNumber = page;\n    this.lastPageSize = size;\n    return this.httpClient.get(`${this.BaseURI}?page=${page}&size=${size}`);\n  }\n  static #_ = this.ɵfac = function BillService_Factory(t) {\n    return new (t || BillService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BillService,\n    factory: BillService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;AAUA,OAAM,MAAOA,WAAW;EAOtBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IANtB,gBAAW,GAAW,EAAE;IACxB,iBAAY,GAAW,CAAC;IACxB,mBAAc,GAAW,CAAC;IAG1B,YAAO,GAAG,gDAAgD;EACrB;EAC7CC,QAAQ,IAAU;EAEXC,UAAU,CAACC,MAAc;IAC9B,OAAO,IAAI,CAACH,UAAU,CAACI,MAAM,CAC3B,GAAG,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC,UAAU,EAAE,OAAO,CAAC,IAAIH,MAAM,EAAE,CACzD;EACH;EAEOI,OAAO,CAACC,IAAY,EAAEC,KAAa;IACxC,OAAO,IAAI,CAACT,UAAU,CAACU,IAAI,CAAO,GAAG,IAAI,CAACL,OAAO,EAAE,EAAE;MACnDG,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA;KACR,CAAC;EACJ;EAEOE,QAAQ,CAACC,EAAU,EAAEJ,IAAY,EAAEC,KAAa;IACrD,OAAO,IAAI,CAACT,UAAU,CAACa,GAAG,CAAO,GAAG,IAAI,CAACR,OAAO,IAAIO,EAAE,EAAE,EAAE;MACxDJ,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA;KACR,CAAC;EACJ;EAEOK,WAAW,CAACF,EAAU;IAC3B,OAAO,IAAI,CAACZ,UAAU,CAACe,GAAG,CAAO,GAAG,IAAI,CAACV,OAAO,IAAIO,EAAE,EAAE,CAAC;EAC3D;EAEOI,oBAAoB,CACzBJ,EAAU,EACVK,OAAe,IAAI,CAACC,cAAc,EAClCC,OAAe,IAAI,CAACC,YAAY;IAEhC,IAAI,CAACC,cAAc,GAAGT,EAAE;IACxB,IAAI,CAACM,cAAc,GAAGD,IAAI;IAC1B,IAAI,CAACG,YAAY,GAAGD,IAAI;IACxB,OAAO,IAAI,CAACnB,UAAU,CAACe,GAAG,CACxB,GAAG,IAAI,CAACV,OAAO,aAAaO,EAAE,SAASK,IAAI,SAASE,IAAI,EAAE,CAC3D;EACH;EAEOG,YAAY,CAACL,IAAY,EAAEE,IAAY;IAC5C,IAAI,CAACD,cAAc,GAAGD,IAAI;IAC1B,IAAI,CAACG,YAAY,GAAGD,IAAI;IACxB,OAAO,IAAI,CAACnB,UAAU,CAACe,GAAG,CACxB,GAAG,IAAI,CAACV,OAAO,SAASY,IAAI,SAASE,IAAI,EAAE,CAC5C;EACH;EAAC;qBArDUrB,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAAyB,SAAXzB,WAAW;IAAA0B,YAFV;EAAM","names":["BillService","constructor","httpClient","ngOnInit","deleteBill","billID","delete","BaseURI","replace","addBill","name","email","post","editBill","id","put","getBillById","get","getBillsByCustomerId","page","lastPageNumber","size","lastPageSize","lastCustomerID","getPageBills","factory","providedIn"],"sourceRoot":"","sources":["/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/src/app/services/bill.service.ts"],"sourcesContent":["import { FullPageBill } from \"./../../../../../../GitHub/tp-controle-spring-boot/front/src/app/model/bill.model\";\nimport { Bill, PageBill } from \"./../model/bill.model\";\nimport { Injectable, OnInit } from \"@angular/core\";\nimport { Observable, of, throwError } from \"rxjs\";\nimport { UUID } from \"angular2-uuid\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BillService implements OnInit {\n  private lastKeyword: string = \"\";\n  private lastPageSize: number = 5;\n  private lastPageNumber: number = 0;\n  private lastCustomerID!: number;\n  private bills!: Array<Bill>;\n  private BaseURI = \"http://localhost:8888/BILLING-SERVICE/fullBill\";\n  constructor(private httpClient: HttpClient) {}\n  ngOnInit(): void {}\n\n  public deleteBill(billID: number): Observable<void> {\n    return this.httpClient.delete<void>(\n      `${this.BaseURI.replace(\"fullBill\", \"bills\")}/${billID}`\n    );\n  }\n\n  public addBill(name: string, email: string): Observable<Bill> {\n    return this.httpClient.post<Bill>(`${this.BaseURI}`, {\n      name: name,\n      email: email,\n    });\n  }\n\n  public editBill(id: number, name: string, email: string): Observable<Bill> {\n    return this.httpClient.put<Bill>(`${this.BaseURI}/${id}`, {\n      name: name,\n      email: email,\n    });\n  }\n\n  public getBillById(id: number): Observable<Bill> {\n    return this.httpClient.get<Bill>(`${this.BaseURI}/${id}`);\n  }\n\n  public getBillsByCustomerId(\n    id: number,\n    page: number = this.lastPageNumber,\n    size: number = this.lastPageSize\n  ): Observable<FullPageBill> {\n    this.lastCustomerID = id;\n    this.lastPageNumber = page;\n    this.lastPageSize = size;\n    return this.httpClient.get<FullPageBill>(\n      `${this.BaseURI}/customer/${id}?page=${page}&size=${size}`\n    );\n  }\n\n  public getPageBills(page: number, size: number): Observable<FullPageBill> {\n    this.lastPageNumber = page;\n    this.lastPageSize = size;\n    return this.httpClient.get<FullPageBill>(\n      `${this.BaseURI}?page=${page}&size=${size}`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}