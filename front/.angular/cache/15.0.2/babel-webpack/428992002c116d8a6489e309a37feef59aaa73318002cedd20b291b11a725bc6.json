{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class BillService {\n  constructor(httpClient) {\n    this.httpClient = httpClient;\n    this.lastKeyword = \"\";\n    this.lastPageSize = 5;\n    this.lastPageNumber = 0;\n    this.BaseURI = \"http://localhost:8888/BILLING-SERVICE/bills\";\n  }\n  ngOnInit() {}\n  deleteBill(billID) {\n    return this.httpClient.delete(`${this.BaseURI}/${billID}`);\n  }\n  addBill(name, email) {\n    return this.httpClient.post(`${this.BaseURI}`, {\n      name: name,\n      email: email\n    });\n  }\n  editBill(id, name, email) {\n    return this.httpClient.put(`${this.BaseURI}/${id}`, {\n      name: name,\n      email: email\n    });\n  }\n  getPageBillsByKeyword(customerID, keyword = this.lastKeyword, page = this.lastPageNumber, size = this.lastPageSize) {\n    this.lastPageNumber = page;\n    this.lastPageSize = size;\n    this.lastKeyword = keyword;\n    this.lastCustomerID = customerID;\n    let uri = \"\";\n    if (this.lastCustomerID > 0) uri = `${this.BaseURI.replace(\"bills\", \"fullBill\")}/${customerID}`;else uri = `${this.BaseURI}?keyword=${keyword}&page=${page}&size=${size}`;\n    return this.httpClient.get(uri);\n  }\n  getBillById(id) {\n    return this.httpClient.get(`${this.BaseURI}/${id}`);\n  }\n  getBillsByCustomerId(id) {\n    return this.httpClient.get(`${this.BaseURI.replace(\"bills\", \"fullBill\")}/customer/${id}`);\n  }\n  static #_ = this.ɵfac = function BillService_Factory(t) {\n    return new (t || BillService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BillService,\n    factory: BillService.ɵfac,\n    providedIn: \"root\"\n  });\n}","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,WAAW;EAOtBC,YAAoBC,UAAsB;IAAtB,eAAU,GAAVA,UAAU;IANtB,gBAAW,GAAW,EAAE;IACxB,iBAAY,GAAW,CAAC;IACxB,mBAAc,GAAW,CAAC;IAG1B,YAAO,GAAG,6CAA6C;EAClB;EAC7CC,QAAQ,IAAU;EAEXC,UAAU,CAACC,MAAc;IAC9B,OAAO,IAAI,CAACH,UAAU,CAACI,MAAM,CAAO,GAAG,IAAI,CAACC,OAAO,IAAIF,MAAM,EAAE,CAAC;EAClE;EAEOG,OAAO,CAACC,IAAY,EAAEC,KAAa;IACxC,OAAO,IAAI,CAACR,UAAU,CAACS,IAAI,CAAO,GAAG,IAAI,CAACJ,OAAO,EAAE,EAAE;MACnDE,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA;KACR,CAAC;EACJ;EAEOE,QAAQ,CAACC,EAAU,EAAEJ,IAAY,EAAEC,KAAa;IACrD,OAAO,IAAI,CAACR,UAAU,CAACY,GAAG,CAAO,GAAG,IAAI,CAACP,OAAO,IAAIM,EAAE,EAAE,EAAE;MACxDJ,IAAI,EAAEA,IAAI;MACVC,KAAK,EAAEA;KACR,CAAC;EACJ;EAEOK,qBAAqB,CAC1BC,UAAkB,EAClBC,UAAkB,IAAI,CAACC,WAAW,EAClCC,OAAe,IAAI,CAACC,cAAc,EAClCC,OAAe,IAAI,CAACC,YAAY;IAEhC,IAAI,CAACF,cAAc,GAAGD,IAAI;IAC1B,IAAI,CAACG,YAAY,GAAGD,IAAI;IACxB,IAAI,CAACH,WAAW,GAAGD,OAAO;IAC1B,IAAI,CAACM,cAAc,GAAGP,UAAU;IAChC,IAAIQ,GAAG,GAAG,EAAE;IACZ,IAAI,IAAI,CAACD,cAAc,GAAG,CAAC,EACzBC,GAAG,GAAG,GAAG,IAAI,CAACjB,OAAO,CAACkB,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,IAAIT,UAAU,EAAE,CAAC,KAChEQ,GAAG,GAAG,GAAG,IAAI,CAACjB,OAAO,YAAYU,OAAO,SAASE,IAAI,SAASE,IAAI,EAAE;IAEzE,OAAO,IAAI,CAACnB,UAAU,CAACwB,GAAG,CAAWF,GAAG,CAAC;EAC3C;EAEOG,WAAW,CAACd,EAAU;IAC3B,OAAO,IAAI,CAACX,UAAU,CAACwB,GAAG,CAAO,GAAG,IAAI,CAACnB,OAAO,IAAIM,EAAE,EAAE,CAAC;EAC3D;EAEOe,oBAAoB,CAACf,EAAU;IACpC,OAAO,IAAI,CAACX,UAAU,CAACwB,GAAG,CACxB,GAAG,IAAI,CAACnB,OAAO,CAACkB,OAAO,CAAC,OAAO,EAAE,UAAU,CAAC,aAAaZ,EAAE,EAAE,CAC9D;EACH;EAAC;qBAtDUb,WAAW;EAAA;EAAA;WAAXA,WAAW;IAAA6B,SAAX7B,WAAW;IAAA8B,YAFV;EAAM","names":["BillService","constructor","httpClient","ngOnInit","deleteBill","billID","delete","BaseURI","addBill","name","email","post","editBill","id","put","getPageBillsByKeyword","customerID","keyword","lastKeyword","page","lastPageNumber","size","lastPageSize","lastCustomerID","uri","replace","get","getBillById","getBillsByCustomerId","factory","providedIn"],"sourceRoot":"","sources":["/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/src/app/services/bill.service.ts"],"sourcesContent":["import { Bill, PageBill } from \"./../model/bill.model\";\nimport { Injectable, OnInit } from \"@angular/core\";\nimport { Observable, of, throwError } from \"rxjs\";\nimport { UUID } from \"angular2-uuid\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BillService implements OnInit {\n  private lastKeyword: string = \"\";\n  private lastPageSize: number = 5;\n  private lastPageNumber: number = 0;\n  private lastCustomerID!: number;\n  private bills!: Array<Bill>;\n  private BaseURI = \"http://localhost:8888/BILLING-SERVICE/bills\";\n  constructor(private httpClient: HttpClient) {}\n  ngOnInit(): void {}\n\n  public deleteBill(billID: number): Observable<void> {\n    return this.httpClient.delete<void>(`${this.BaseURI}/${billID}`);\n  }\n\n  public addBill(name: string, email: string): Observable<Bill> {\n    return this.httpClient.post<Bill>(`${this.BaseURI}`, {\n      name: name,\n      email: email,\n    });\n  }\n\n  public editBill(id: number, name: string, email: string): Observable<Bill> {\n    return this.httpClient.put<Bill>(`${this.BaseURI}/${id}`, {\n      name: name,\n      email: email,\n    });\n  }\n\n  public getPageBillsByKeyword(\n    customerID: number,\n    keyword: string = this.lastKeyword,\n    page: number = this.lastPageNumber,\n    size: number = this.lastPageSize\n  ): Observable<PageBill> {\n    this.lastPageNumber = page;\n    this.lastPageSize = size;\n    this.lastKeyword = keyword;\n    this.lastCustomerID = customerID;\n    let uri = \"\";\n    if (this.lastCustomerID > 0)\n      uri = `${this.BaseURI.replace(\"bills\", \"fullBill\")}/${customerID}`;\n    else uri = `${this.BaseURI}?keyword=${keyword}&page=${page}&size=${size}`;\n\n    return this.httpClient.get<PageBill>(uri);\n  }\n\n  public getBillById(id: number): Observable<Bill> {\n    return this.httpClient.get<Bill>(`${this.BaseURI}/${id}`);\n  }\n\n  public getBillsByCustomerId(id: number): Observable<PageBill> {\n    return this.httpClient.get<PageBill>(\n      `${this.BaseURI.replace(\"bills\", \"fullBill\")}/customer/${id}`\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}