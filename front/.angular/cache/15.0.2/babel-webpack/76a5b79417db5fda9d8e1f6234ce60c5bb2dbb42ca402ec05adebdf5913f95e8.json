{"ast":null,"code":"import { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./../services/customer.service\";\nimport * as i3 from \"@angular/common\";\nfunction NewCustomerComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"button\", 11)(2, \"span\", 12);\n    i0.ɵɵtext(3, \"\\u00D7\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 13);\n    i0.ɵɵlistener(\"click\", function NewCustomerComponent_div_1_Template_span_click_4_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.handleCloseAlert());\n    });\n    i0.ɵɵtext(5, \"Close\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"strong\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.message, \" \");\n  }\n}\nfunction NewCustomerComponent_small_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getErrorMessage(\"Name\", ctx_r1.customerFormGroup.controls[\"name\"].errors), \" \");\n  }\n}\nfunction NewCustomerComponent_small_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.getErrorMessage(\"Price\", ctx_r2.customerFormGroup.controls[\"price\"].errors), \" \");\n  }\n}\nfunction NewCustomerComponent_small_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 14);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getErrorMessage(\"Quantity\", ctx_r3.customerFormGroup.controls[\"quantity\"].errors), \" \");\n  }\n}\nexport class NewCustomerComponent {\n  constructor(fb, customerService) {\n    this.fb = fb;\n    this.customerService = customerService;\n    this.message = \"\";\n  }\n  handleAddCustomerFormSubmit() {\n    const {\n      email\n    } = this.customerFormGroup.value;\n    this.customerService.addCustomer(name, email).subscribe({\n      next: customer => {\n        this.customerFormGroup.reset();\n        this.message = \"Customer added successfully\";\n      },\n      error: err => console.log(err)\n    });\n  }\n  handleCloseAlert() {\n    this.message = \"\";\n  }\n  ngOnInit() {\n    this.customerFormGroup = this.fb.group({\n      email: this.fb.control(\"\", [Validators.required, Validators.minLength(4)])\n    });\n  }\n  getErrorMessage(name, error) {\n    if (error[\"required\"]) return `${name}  is required`;\n    if (error[\"minlength\"]) return `The minimum length of ${name} is ${error[\"minlength\"][\"requiredLength\"]}`;\n    if (error[\"min\"]) return `The min value of ${name} is ${error[\"min\"][\"min\"]}`;\n    return \"\";\n  }\n  static #_ = this.ɵfac = function NewCustomerComponent_Factory(t) {\n    return new (t || NewCustomerComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.CustomerService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NewCustomerComponent,\n    selectors: [[\"app-new-customer\"]],\n    decls: 21,\n    vars: 6,\n    consts: [[1, \"container\", \"mt-3\", \"col-md-6\", \"offset-md-3\"], [\"class\", \"alert alert-success alert-dismissible fade show\", \"role\", \"alert\", 4, \"ngIf\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"text\", \"formControlName\", \"name\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"number\", \"formControlName\", \"price\", 1, \"form-control\"], [\"type\", \"number\", \"formControlName\", \"quantity\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-outline-success\", 3, \"disabled\"], [\"role\", \"alert\", 1, \"alert\", \"alert-success\", \"alert-dismissible\", \"fade\", \"show\"], [\"type\", \"button\", \"data-dismiss\", \"alert\", \"aria-label\", \"Close\", 1, \"close\"], [\"aria-hidden\", \"true\"], [1, \"sr-only\", 3, \"click\"], [1, \"text-danger\"]],\n    template: function NewCustomerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, NewCustomerComponent_div_1_Template, 8, 1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2);\n        i0.ɵɵlistener(\"ngSubmit\", function NewCustomerComponent_Template_form_ngSubmit_2_listener() {\n          return ctx.handleAddCustomerFormSubmit();\n        });\n        i0.ɵɵelementStart(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Customer name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵtemplate(7, NewCustomerComponent_small_7_Template, 2, 1, \"small\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3)(9, \"label\", 4);\n        i0.ɵɵtext(10, \"Customer price\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 7);\n        i0.ɵɵtemplate(12, NewCustomerComponent_small_12_Template, 2, 1, \"small\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 3)(14, \"label\", 4);\n        i0.ɵɵtext(15, \"Customer quantity in stock\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 8);\n        i0.ɵɵtemplate(17, NewCustomerComponent_small_17_Template, 2, 1, \"small\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 3)(19, \"button\", 9);\n        i0.ɵɵtext(20, \" Add customer \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.message.length > 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.customerFormGroup);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.customerFormGroup.controls[\"name\"].errors && ctx.customerFormGroup.controls[\"name\"].touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.customerFormGroup.controls[\"price\"].errors && ctx.customerFormGroup.controls[\"price\"].touched);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.customerFormGroup.controls[\"quantity\"].errors && ctx.customerFormGroup.controls[\"quantity\"].touched);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.customerFormGroup.valid);\n      }\n    },\n    dependencies: [i3.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"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","names":["Validators","i0","NewCustomerComponent","constructor","fb","customerService","handleAddCustomerFormSubmit","email","customerFormGroup","value","addCustomer","name","subscribe","next","customer","reset","message","error","err","console","log","handleCloseAlert","ngOnInit","group","control","required","minLength","getErrorMessage","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/src/app/new-customer/new-customer.component.ts","/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/src/app/new-customer/new-customer.component.html"],"sourcesContent":["import { CustomerService } from \"./../services/customer.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport {\n  Form,\n  FormBuilder,\n  Validators,\n  FormGroup,\n  ValidationErrors,\n} from \"@angular/forms\";\n\n@Component({\n  selector: \"app-new-customer\",\n  templateUrl: \"./new-customer.component.html\",\n  styleUrls: [\"./new-customer.component.scss\"],\n})\nexport class NewCustomerComponent implements OnInit {\n  handleAddCustomerFormSubmit() {\n    const { email } = this.customerFormGroup.value;\n    this.customerService.addCustomer(name, email).subscribe({\n      next: (customer) => {\n        this.customerFormGroup.reset();\n        this.message = \"Customer added successfully\";\n      },\n      error: (err) => console.log(err),\n    });\n  }\n  handleCloseAlert() {\n    this.message = \"\";\n  }\n  customerFormGroup!: FormGroup;\n  message: string = \"\";\n  constructor(\n    private fb: FormBuilder,\n    private customerService: CustomerService\n  ) {}\n  ngOnInit(): void {\n    this.customerFormGroup = this.fb.group({\n      email: this.fb.control(\"\", [\n        Validators.required,\n        Validators.minLength(4),\n      ]),\n    });\n  }\n  getErrorMessage(name: string, error: ValidationErrors): string {\n    if (error[\"required\"]) return `${name}  is required`;\n    if (error[\"minlength\"])\n      return `The minimum length of ${name} is ${error[\"minlength\"][\"requiredLength\"]}`;\n    if (error[\"min\"])\n      return `The min value of ${name} is ${error[\"min\"][\"min\"]}`;\n    return \"\";\n  }\n}\n","<div class=\"container mt-3 col-md-6 offset-md-3\">\n  <div\n    *ngIf=\"message.length > 0\"\n    class=\"alert alert-success alert-dismissible fade show\"\n    role=\"alert\"\n  >\n    <button type=\"button\" class=\"close\" data-dismiss=\"alert\" aria-label=\"Close\">\n      <span aria-hidden=\"true\">&times;</span>\n      <span class=\"sr-only\" (click)=\"handleCloseAlert()\">Close</span>\n    </button>\n    <strong>\n      {{ message }}\n    </strong>\n  </div>\n  <form\n    [formGroup]=\"customerFormGroup\"\n    (ngSubmit)=\"handleAddCustomerFormSubmit()\"\n  >\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Customer name</label>\n      <input type=\"text\" formControlName=\"name\" class=\"form-control\" />\n      <small\n        class=\"text-danger\"\n        *ngIf=\"\n          customerFormGroup.controls['name'].errors &&\n          customerFormGroup.controls['name'].touched\n        \"\n      >\n        {{ getErrorMessage(\"Name\", customerFormGroup.controls[\"name\"].errors) }}\n      </small>\n    </div>\n\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Customer price</label>\n      <input type=\"number\" formControlName=\"price\" class=\"form-control\" />\n      <small\n        class=\"text-danger\"\n        *ngIf=\"\n          customerFormGroup.controls['price'].errors &&\n          customerFormGroup.controls['price'].touched\n        \"\n      >\n        {{\n          getErrorMessage(\"Price\", customerFormGroup.controls[\"price\"].errors)\n        }}\n      </small>\n    </div>\n\n    <div class=\"mb-3\">\n      <label class=\"form-label\">Customer quantity in stock</label>\n      <input type=\"number\" formControlName=\"quantity\" class=\"form-control\" />\n      <small\n        class=\"text-danger\"\n        *ngIf=\"\n          customerFormGroup.controls['quantity'].errors &&\n          customerFormGroup.controls['quantity'].touched\n        \"\n      >\n        {{\n          getErrorMessage(\n            \"Quantity\",\n            customerFormGroup.controls[\"quantity\"].errors\n          )\n        }}\n      </small>\n    </div>\n    <div class=\"mb-3\">\n      <button\n        type=\"submit\"\n        class=\"btn btn-outline-success\"\n        [disabled]=\"!customerFormGroup.valid\"\n      >\n        Add customer\n      </button>\n    </div>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}