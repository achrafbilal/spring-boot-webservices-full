{"ast":null,"code":"import _asyncToGenerator from \"/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet CustomersComponent = class CustomersComponent {\n  constructor(customerService, formBuilder, authService, router) {\n    this.customerService = customerService;\n    this.formBuilder = formBuilder;\n    this.authService = authService;\n    this.router = router;\n    this.currentPage = 0;\n    this.pageSize = 5;\n    this.totalPages = 0;\n    this.totalElements = 0;\n    this.roundNumber = value => {\n      return Math.round(value);\n    };\n    this.handleGetPageCustomer = (keyword, page, size) => {\n      this.customerService.getPageCustomersByKeyword(keyword, page, size).subscribe({\n        next: data => {\n          this.customers = data._embedded.customers;\n          this.currentPage = data.page.number;\n          this.pageSize = data.page.size;\n          this.totalPages = data.page.totalPages;\n          this.totalElements = data.page.totalElements;\n        },\n        error: error => this.errorMessage = error.message\n      });\n    };\n    this.handleSearchPageCustomersByKeyword = () => {\n      this.currentPage = 0;\n      this.customerService.getPageCustomersByKeyword(this.searchFormGroup.value.keyword, this.currentPage, this.pageSize).subscribe({\n        next: data => {\n          let {\n            customers\n          } = data._embedded;\n          let {\n            number,\n            totalElements,\n            totalPages,\n            size\n          } = data.page;\n          this.customers = customers;\n          this.currentPage = number;\n          this.pageSize = size;\n          this.totalPages = totalPages;\n          this.totalElements = totalElements;\n        },\n        error: error => {\n          this.errorMessage = error.message;\n        }\n      });\n    };\n    this.handleCustomerBills = customerID => {\n      this.router.navigateByUrl(`/admin/customer-bills/${customerID}`);\n      //this.customerService.getCustomerBills(customerID);\n    };\n  }\n\n  ngOnInit() {\n    this.searchFormGroup = this.formBuilder.group({\n      keyword: this.formBuilder.control(\"\")\n    });\n    this.handleGetPageCustomer(\"\", this.currentPage, this.pageSize);\n  }\n  handleDeleteCustomer(customer) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if (confirm(\"Are you sure you want to delete this customer\")) {\n        _this.customerService.deleteCustomer(customer.id).subscribe(d => {\n          _this.customerService.getPageCustomersByKeyword();\n        });\n      }\n    })();\n  }\n  handleNewCustomer() {\n    this.router.navigateByUrl(\"/admin/new-customer\");\n  }\n  handleEditCustomer(customer) {\n    this.router.navigateByUrl(`/admin/edit-customer/${customer.id}`);\n  }\n};\nCustomersComponent = __decorate([Component({\n  selector: \"app-customers\",\n  templateUrl: \"./customers.component.html\",\n  styleUrls: [\"./customers.component.scss\"]\n})], CustomersComponent);\nexport { CustomersComponent };","map":{"version":3,"mappings":"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","names":["Component","CustomersComponent","constructor","customerService","formBuilder","authService","router","value","Math","round","keyword","page","size","getPageCustomersByKeyword","subscribe","next","data","customers","_embedded","currentPage","number","pageSize","totalPages","totalElements","error","errorMessage","message","searchFormGroup","customerID","navigateByUrl","ngOnInit","group","control","handleGetPageCustomer","handleDeleteCustomer","customer","confirm","deleteCustomer","id","d","handleNewCustomer","handleEditCustomer","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/src/app/customers/customers.component.ts"],"sourcesContent":["import { AuthenticationService } from \"./../services/authentication.service\";\nimport { Customer, PageCustomer } from \"./../model/customer.model\";\n\nimport { CustomerService } from \"./../services/customer.service\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-customers\",\n  templateUrl: \"./customers.component.html\",\n  styleUrls: [\"./customers.component.scss\"],\n})\nexport class CustomersComponent implements OnInit {\n  customers!: Array<Customer>;\n  errorMessage!: String;\n  searchFormGroup!: FormGroup;\n  currentPage: number = 0;\n  pageSize: number = 5;\n  totalPages: number = 0;\n  totalElements: number = 0;\n  constructor(\n    private customerService: CustomerService,\n    private formBuilder: FormBuilder,\n    public authService: AuthenticationService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.searchFormGroup = this.formBuilder.group({\n      keyword: this.formBuilder.control(\"\"),\n    });\n    this.handleGetPageCustomer(\"\", this.currentPage, this.pageSize);\n  }\n\n  async handleDeleteCustomer(customer: Customer) {\n    if (confirm(\"Are you sure you want to delete this customer\")) {\n      this.customerService.deleteCustomer(customer.id).subscribe((d) => {\n        this.customerService.getPageCustomersByKeyword();\n      });\n    }\n  }\n  roundNumber = (value: number) => {\n    return Math.round(value);\n  };\n\n  handleGetPageCustomer = (keyword: string, page: number, size: number) => {\n    this.customerService\n      .getPageCustomersByKeyword(keyword, page, size)\n      .subscribe({\n        next: (data) => {\n          this.customers = data._embedded.customers;\n          this.currentPage = data.page.number;\n          this.pageSize = data.page.size;\n          this.totalPages = data.page.totalPages;\n          this.totalElements = data.page.totalElements;\n        },\n        error: (error) => (this.errorMessage = error.message),\n      });\n  };\n  handleSearchPageCustomersByKeyword = () => {\n    this.currentPage = 0;\n    this.customerService\n      .getPageCustomersByKeyword(\n        this.searchFormGroup.value.keyword,\n        this.currentPage,\n        this.pageSize\n      )\n      .subscribe({\n        next: (data: PageCustomer) => {\n          let { customers } = data._embedded;\n          let { number, totalElements, totalPages, size } = data.page;\n          this.customers = customers;\n          this.currentPage = number;\n          this.pageSize = size;\n          this.totalPages = totalPages;\n          this.totalElements = totalElements;\n        },\n        error: (error) => {\n          this.errorMessage = error.message;\n        },\n      });\n  };\n  handleNewCustomer() {\n    this.router.navigateByUrl(\"/admin/new-customer\");\n  }\n  handleEditCustomer(customer: Customer) {\n    this.router.navigateByUrl(`/admin/edit-customer/${customer.id}`);\n  }\n\n  handleCustomerBills = (customerID: number) => {\n    this.router.navigateByUrl(`/admin/customer-bills/${customerID}`);\n    //this.customerService.getCustomerBills(customerID);\n  };\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}