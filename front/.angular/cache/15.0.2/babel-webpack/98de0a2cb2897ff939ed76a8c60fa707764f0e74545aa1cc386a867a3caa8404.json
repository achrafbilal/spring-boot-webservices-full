{"ast":null,"code":"import { SmoothieChart, TimeSeries } from \"smoothie\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/security.service\";\nimport * as i2 from \"@angular/common/http\";\nexport class AnalyticsComponent {\n  constructor(authService, HttpClient) {\n    this.authService = authService;\n    this.HttpClient = HttpClient;\n    this.canvas = document.getElementById(\"chart\");\n    this.chart = new SmoothieChart();\n  }\n  ngOnInit() {\n    this.series = new TimeSeries();\n    //this.canvas;\n    this.chart.addTimeSeries(this.series, {\n      strokeStyle: \"rgba(0, 255, 0, 1)\"\n    });\n    this.canvas = document.getElementById(\"chart\");\n    this.chart.streamTo(this.canvas, 500);\n    const context = this;\n    setInterval(function () {\n      context.series.append(Date.now(), Math.random() * 10000);\n      console.log(\"e\");\n    }, 500);\n    this.getAnalytics();\n  }\n  getAnalytics() {\n    return this.HttpClient.get(\"/analytics\");\n  }\n  static #_ = this.ɵfac = function AnalyticsComponent_Factory(t) {\n    return new (t || AnalyticsComponent)(i0.ɵɵdirectiveInject(i1.SecurityService), i0.ɵɵdirectiveInject(i2.HttpClient));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AnalyticsComponent,\n    selectors: [[\"app-analytics\"]],\n    decls: 3,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"row\", \"mt-5\"], [\"id\", \"chart\", \"width\", \"1000\", \"height\", \"600\", 1, \"col-8\", \"mx-auto\"]],\n    template: function AnalyticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n        i0.ɵɵelement(2, \"canvas\", 2);\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AAGA,SAASA,aAAa,EAAEC,UAAU,QAAQ,UAAU;;;;AASpD,OAAM,MAAOC,kBAAkB;EAC7BC,YACSC,WAA4B,EAC3BC,UAAsB;IADvB,gBAAW,GAAXD,WAAW;IACV,eAAU,GAAVC,UAAU;IAGpB,WAAM,GAAsBC,QAAQ,CAACC,cAAc,CACjD,OAAO,CACa;IACtB,UAAK,GAAG,IAAIP,aAAa,EAAE;EALxB;EAMHQ,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAIR,UAAU,EAAE;IAC9B;IACA,IAAI,CAACS,KAAK,CAACC,aAAa,CAAC,IAAI,CAACF,MAAM,EAAE;MACpCG,WAAW,EAAE;KACd,CAAC;IACF,IAAI,CAACC,MAAM,GAAGP,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAsB;IACnE,IAAI,CAACG,KAAK,CAACI,QAAQ,CAAC,IAAI,CAACD,MAAM,EAAE,GAAG,CAAC;IAErC,MAAME,OAAO,GAAG,IAAI;IACpBC,WAAW,CAAC;MACVD,OAAO,CAACN,MAAM,CAACQ,MAAM,CAACC,IAAI,CAACC,GAAG,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,GAAG,KAAK,CAAC;MACxDC,OAAO,CAACC,GAAG,CAAC,GAAG,CAAC;IAClB,CAAC,EAAE,GAAG,CAAC;IACP,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAY;IACV,OAAO,IAAI,CAACnB,UAAU,CAACoB,GAAG,CAAa,YAAY,CAAC;EACtD;EAAC;qBA7BUvB,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAwB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCZ/BC,8BAAuB;QAEnBA,4BAA4E;QAC9EA,iBAAM","names":["SmoothieChart","TimeSeries","AnalyticsComponent","constructor","authService","HttpClient","document","getElementById","ngOnInit","series","chart","addTimeSeries","strokeStyle","canvas","streamTo","context","setInterval","append","Date","now","Math","random","console","log","getAnalytics","get","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/achrafbilal/Documents/GitHub/web-service-full/webservices/front/src/app/analytics/analytics.component.ts","/Users/achrafbilal/Documents/GitHub/web-service-full/webservices/front/src/app/analytics/analytics.component.html"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { SmoothieChart, TimeSeries } from \"smoothie\";\nimport { SecurityService } from \"../services/security.service\";\nimport { Analytic } from \"../model/analytics.model\";\n\n@Component({\n  selector: \"app-analytics\",\n  templateUrl: \"./analytics.component.html\",\n  styleUrls: [\"./analytics.component.scss\"],\n})\nexport class AnalyticsComponent implements OnInit {\n  constructor(\n    public authService: SecurityService,\n    private HttpClient: HttpClient\n  ) {}\n  series!: TimeSeries;\n  canvas: HTMLCanvasElement = document.getElementById(\n    \"chart\"\n  ) as HTMLCanvasElement;\n  chart = new SmoothieChart();\n  ngOnInit(): void {\n    this.series = new TimeSeries();\n    //this.canvas;\n    this.chart.addTimeSeries(this.series, {\n      strokeStyle: \"rgba(0, 255, 0, 1)\",\n    });\n    this.canvas = document.getElementById(\"chart\") as HTMLCanvasElement;\n    this.chart.streamTo(this.canvas, 500);\n\n    const context = this;\n    setInterval(function () {\n      context.series.append(Date.now(), Math.random() * 10000);\n      console.log(\"e\");\n    }, 500);\n    this.getAnalytics();\n  }\n\n  getAnalytics(): Observable<Analytic[]> {\n    return this.HttpClient.get<Analytic[]>(\"/analytics\");\n  }\n}\n","<div class=\"container\">\n  <div class=\"row mt-5\">\n    <canvas id=\"chart\" width=\"1000\" height=\"600\" class=\"col-8 mx-auto\"></canvas>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}