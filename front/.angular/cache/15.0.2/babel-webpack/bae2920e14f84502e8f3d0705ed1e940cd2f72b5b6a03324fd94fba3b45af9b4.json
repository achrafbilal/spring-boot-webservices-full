{"ast":null,"code":"import { Observable, of, throwError } from \"rxjs\";\nimport { UUID } from \"angular2-uuid\";\nimport * as i0 from \"@angular/core\";\nexport class BillService {\n  constructor() {\n    this.bills = new Array();\n    for (let index = 0; index < 101; index++) {\n      this.bills.push({\n        id: UUID.UUID(),\n        name: `Bill ${Number(index) + 1}`,\n        price: Math.round(Math.random() * 100) * 1000,\n        promotion: Math.random() > 0.4\n      });\n    }\n  }\n  getAllBills() {\n    // let rnd = Math.random();\n    // if (rnd < 0.1) return throwError(() => new Error('Random below 0.5'));\n    return of(this.bills);\n  }\n  getPageBill(page, size) {\n    let index = page * size;\n    let totalPages = ~~(this.bills.length / size) + (this.bills.length % size > 0 ? 1 : 0);\n    let prods = this.bills.slice(index, index + size);\n    console.log({\n      bills: prods,\n      page: page,\n      size: size,\n      totalPages: totalPages\n    });\n    return of({\n      bills: prods,\n      page: page,\n      size: size,\n      totalPages: totalPages\n    });\n  }\n  deleteBill(billID) {\n    this.bills = this.bills.filter(p => p.id != billID);\n    return of(true);\n  }\n  setBillPromotion(billID) {\n    let bill = this.bills.find(p => p.id == billID);\n    if (bill) {\n      bill.promotion = !bill.promotion;\n      return of(true);\n    }\n    return throwError(() => new Error(\"Bill not found\"));\n  }\n  getBillsByKeyword(keyword) {\n    let prods = this.bills.filter(p => keyword.length > 0 ? p.name.toLowerCase().trim().includes(keyword.toLowerCase().trim()) : this.bills);\n    return of(prods);\n  }\n  getPageBillsByKeyword(keyword, page, size) {\n    let prods = this.bills.filter(p => keyword.length > 0 ? p.name.toLowerCase().trim().includes(keyword.toLowerCase().trim()) : this.bills);\n    return this.pageOf(prods, page, size);\n  }\n  pageOf(bills, page, size) {\n    let index = page * size;\n    let totalPages = ~~(bills.length / size) + (bills.length % size > 0 ? 1 : 0);\n    let prods = bills.slice(index, index + size);\n    return of({\n      bills: prods,\n      page: page,\n      size: size,\n      totalPages: totalPages\n    });\n  }\n  addBill(name, price, promotion) {\n    const uuid = UUID.UUID();\n    this.bills.push({\n      id: uuid,\n      name: name,\n      price: price,\n      promotion: promotion\n    });\n    return this.getBillById(uuid);\n  }\n  editBill(id, name, price, promotion) {\n    // this.bills.reduce({\n    //   id: uuid,\n    //   name: name,\n    //   price: price,\n    //   promotion: promotion,\n    // });\n    this.bills = this.bills.map(p => p.id == id ? {\n      id: id,\n      name: name,\n      price: price,\n      promotion: promotion\n    } : p);\n    return this.getBillById(id);\n  }\n  getBillById(id) {\n    const bill = this.bills.find(p => p.id == id);\n    if (bill == undefined) return throwError(() => new Error(\"Bill not found\"));\n    return of(bill);\n  }\n  static #_ = this.ɵfac = function BillService_Factory(t) {\n    return new (t || BillService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BillService,\n    factory: BillService.ɵfac,\n    providedIn: \"root\"\n  });\n}\ngetBillsByCustomerId(id, number);\nObservable < PageBill > {\n  return: this.httpClient.get(`${this.BaseURI}/custumer/${id}`)\n};","map":{"version":3,"mappings":"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","names":["Observable","of","throwError","UUID","BillService","constructor","bills","Array","index","push","id","name","Number","price","Math","round","random","promotion","getAllBills","getPageBill","page","size","totalPages","length","prods","slice","console","log","deleteBill","billID","filter","p","setBillPromotion","bill","find","Error","getBillsByKeyword","keyword","toLowerCase","trim","includes","getPageBillsByKeyword","pageOf","addBill","uuid","getBillById","editBill","map","undefined","factory","providedIn","getBillsByCustomerId","number","PageBill","return","httpClient","get","BaseURI"],"sourceRoot":"","sources":["/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/src/app/services/bill.service.ts"],"sourcesContent":["import { Bill, PageBill } from \"./../model/bill.model\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable, of, throwError } from \"rxjs\";\nimport { UUID } from \"angular2-uuid\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class BillService {\n  private bills!: Array<any>;\n  constructor() {\n    this.bills = new Array<Bill>();\n    for (let index = 0; index < 101; index++) {\n      this.bills.push({\n        id: UUID.UUID(),\n        name: `Bill ${Number(index) + 1}`,\n        price: Math.round(Math.random() * 100) * 1000,\n        promotion: Math.random() > 0.4,\n      });\n    }\n  }\n  public getAllBills(): Observable<Array<Bill>> {\n    // let rnd = Math.random();\n    // if (rnd < 0.1) return throwError(() => new Error('Random below 0.5'));\n    return of(this.bills);\n  }\n  public getPageBill(page: number, size: number): Observable<PageBill> {\n    let index = page * size;\n    let totalPages =\n      ~~(this.bills.length / size) + (this.bills.length % size > 0 ? 1 : 0);\n    let prods = this.bills.slice(index, index + size);\n    console.log({\n      bills: prods,\n      page: page,\n      size: size,\n      totalPages: totalPages,\n    });\n    return of({\n      bills: prods,\n      page: page,\n      size: size,\n      totalPages: totalPages,\n    });\n  }\n  public deleteBill(billID: string): Observable<boolean> {\n    this.bills = this.bills.filter((p) => p.id != billID);\n    return of(true);\n  }\n\n  public setBillPromotion(billID: string): Observable<boolean> {\n    let bill = this.bills.find((p) => p.id == billID);\n    if (bill) {\n      bill.promotion = !bill.promotion;\n      return of(true);\n    }\n    return throwError(() => new Error(\"Bill not found\"));\n  }\n  public getBillsByKeyword(keyword: string): Observable<Bill[]> {\n    let prods = this.bills.filter((p: Bill) =>\n      keyword.length > 0\n        ? p.name.toLowerCase().trim().includes(keyword.toLowerCase().trim())\n        : this.bills\n    );\n    return of(prods);\n  }\n  public getPageBillsByKeyword(\n    keyword: string,\n    page: number,\n    size: number\n  ): Observable<PageBill> {\n    let prods = this.bills.filter((p: Bill) =>\n      keyword.length > 0\n        ? p.name.toLowerCase().trim().includes(keyword.toLowerCase().trim())\n        : this.bills\n    );\n    return this.pageOf(prods, page, size);\n  }\n  public pageOf(\n    bills: Array<Bill>,\n    page: number,\n    size: number\n  ): Observable<PageBill> {\n    let index = page * size;\n    let totalPages =\n      ~~(bills.length / size) + (bills.length % size > 0 ? 1 : 0);\n    let prods = bills.slice(index, index + size);\n    return of({\n      bills: prods,\n      page: page,\n      size: size,\n      totalPages: totalPages,\n    });\n  }\n  public addBill(\n    name: string,\n    price: number,\n    promotion: boolean\n  ): Observable<Bill> {\n    const uuid = UUID.UUID();\n    this.bills.push({\n      id: uuid,\n      name: name,\n      price: price,\n      promotion: promotion,\n    });\n    return this.getBillById(uuid);\n  }\n  public editBill(\n    id: string,\n    name: string,\n    price: number,\n    promotion: boolean\n  ): Observable<Bill> {\n    // this.bills.reduce({\n    //   id: uuid,\n    //   name: name,\n    //   price: price,\n    //   promotion: promotion,\n    // });\n    this.bills = this.bills.map((p) =>\n      p.id == id\n        ? { id: id, name: name, price: price, promotion: promotion }\n        : p\n    );\n    return this.getBillById(id);\n  }\n  public getBillById(id: string): Observable<Bill> {\n    const bill = this.bills.find((p) => p.id == id);\n    if (bill == undefined) return throwError(() => new Error(\"Bill not found\"));\n    return of(bill);\n  }\n\n  \n}\n\n\npublic getBillsByCustomerId(id: number): Observable<PageBill> {\n    return this.httpClient.get(`${this.BaseURI}/custumer/${id}`);\n  }\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}