{"ast":null,"code":"import { SmoothieChart, TimeSeries } from \"smoothie\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/security.service\";\nexport class AnalyticsComponent {\n  constructor(authService) {\n    this.authService = authService;\n    this.chart = new SmoothieChart();\n  }\n  ngOnInit() {\n    this.series = new TimeSeries();\n    this.canvas = document.getElementById(\"chart\");\n    this.chart.addTimeSeries(this.series, {\n      strokeStyle: \"rgba(0, 255, 0, 1)\"\n    });\n    if (this.canvas !== null) {\n      this.chart.streamTo(this.canvas, 500);\n      const context = this;\n      setInterval(function () {\n        context.series.append(Date.now(), Math.random() * 10000);\n      }, 500);\n    }\n  }\n  static #_ = this.ɵfac = function AnalyticsComponent_Factory(t) {\n    return new (t || AnalyticsComponent)(i0.ɵɵdirectiveInject(i1.SecurityService));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AnalyticsComponent,\n    selectors: [[\"app-analytics\"]],\n    decls: 8,\n    vars: 0,\n    consts: [[1, \"container\"], [1, \"row\"], [1, \"col-6\", \"bg-success\"], [\"id\", \"chart\", 1, \"col-8\", \"mx-auto\"]],\n    template: function AnalyticsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵtext(3, \"Hello\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵtext(5, \"Everyone\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 1);\n        i0.ɵɵelement(7, \"canvas\", 3);\n        i0.ɵɵelementEnd()();\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":"AACA,SAASA,aAAa,EAAEC,UAAU,QAAQ,UAAU;;;AAQpD,OAAM,MAAOC,kBAAkB;EAC7BC,YAAmBC,WAA4B;IAA5B,gBAAW,GAAXA,WAAW;IAI9B,UAAK,GAAG,IAAIJ,aAAa,EAAE;EAJuB;EAKlDK,QAAQ;IACN,IAAI,CAACC,MAAM,GAAG,IAAIL,UAAU,EAAE;IAC9B,IAAI,CAACM,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC;IAC9C,IAAI,CAACC,KAAK,CAACC,aAAa,CAAC,IAAI,CAACL,MAAM,EAAE;MACpCM,WAAW,EAAE;KACd,CAAC;IACF,IAAI,IAAI,CAACL,MAAM,KAAK,IAAI,EAAE;MACxB,IAAI,CAACG,KAAK,CAACG,QAAQ,CAAC,IAAI,CAACN,MAAM,EAAE,GAAG,CAAC;MACrC,MAAMO,OAAO,GAAG,IAAI;MACpBC,WAAW,CAAC;QACVD,OAAO,CAACR,MAAM,CAACU,MAAM,CAACC,IAAI,CAACC,GAAG,EAAE,EAAEC,IAAI,CAACC,MAAM,EAAE,GAAG,KAAK,CAAC;MAC1D,CAAC,EAAE,GAAG,CAAC;;EAEX;EAAC;qBAnBUlB,kBAAkB;EAAA;EAAA;UAAlBA,kBAAkB;IAAAmB;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QCT/BC,8BAAuB;QAEWA,qBAAK;QAAAA,iBAAM;QACzCA,8BAA8B;QAAAA,wBAAQ;QAAAA,iBAAM;QAE9CA,8BAAiB;QACfA,4BAAkD;QACpDA,iBAAM","names":["SmoothieChart","TimeSeries","AnalyticsComponent","constructor","authService","ngOnInit","series","canvas","document","getElementById","chart","addTimeSeries","strokeStyle","streamTo","context","setInterval","append","Date","now","Math","random","selectors","decls","vars","consts","template","i0"],"sourceRoot":"","sources":["/Users/achrafbilal/Documents/GitHub/web-service-full/webservices/front/src/app/analytics/analytics.component.ts","/Users/achrafbilal/Documents/GitHub/web-service-full/webservices/front/src/app/analytics/analytics.component.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport { SmoothieChart, TimeSeries } from \"smoothie\";\nimport { SecurityService } from \"../services/security.service\";\n\n@Component({\n  selector: \"app-analytics\",\n  templateUrl: \"./analytics.component.html\",\n  styleUrls: [\"./analytics.component.scss\"],\n})\nexport class AnalyticsComponent implements OnInit {\n  constructor(public authService: SecurityService) {}\n  series!: TimeSeries;\n\n  canvas!: HTMLCanvasElement;\n  chart = new SmoothieChart();\n  ngOnInit(): void {\n    this.series = new TimeSeries();\n    this.canvas = document.getElementById(\"chart\");\n    this.chart.addTimeSeries(this.series, {\n      strokeStyle: \"rgba(0, 255, 0, 1)\",\n    });\n    if (this.canvas !== null) {\n      this.chart.streamTo(this.canvas, 500);\n      const context = this;\n      setInterval(function () {\n        context.series.append(Date.now(), Math.random() * 10000);\n      }, 500);\n    }\n  }\n}\n","<div class=\"container\">\n  <div class=\"row\">\n    <div class=\"col-6 bg-success\">Hello</div>\n    <div class=\"col-6 bg-success\">Everyone</div>\n  </div>\n  <div class=\"row\">\n    <canvas id=\"chart\" class=\"col-8 mx-auto\"></canvas>\n  </div>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}