{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"./../services/authentication.service\";\nimport * as i3 from \"@angular/router\";\nfunction LoginComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(fb, authService, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.errorMessage = \"\";\n    this.userFormGroup = fb.group({\n      username: fb.control(\"\"),\n      password: fb.control(\"\")\n    });\n  }\n  ngOnInit() {}\n  handleLoginFormSubmit() {\n    const {\n      username,\n      password\n    } = this.userFormGroup.value;\n    this.authService.login(username, password).subscribe({\n      next: appUser => {\n        this.authService.authenticateUser(appUser).subscribe({\n          next: data => {\n            console.log(this.authService.isUser(), this.authService.isAdmin());\n            this.router.navigateByUrl(\"/products\");\n          },\n          error: error => {\n            this.errorMessage = error.message;\n          }\n        });\n      },\n      error: error => {\n        this.errorMessage = error.message;\n      }\n    });\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthenticationService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"app-login\"]],\n    decls: 19,\n    vars: 2,\n    consts: [[1, \"container\", \"mt-5\"], [1, \"col-md-6\", \"offset-md-3\"], [1, \"card\"], [1, \"card-header\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"card-body\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [\"for\", \"username\", 1, \"form-label\"], [\"type\", \"text\", \"name\", \"username\", \"formControlName\", \"username\", \"id\", \"username\", 1, \"form-control\"], [\"for\", \"password\", 1, \"form-label\"], [\"type\", \"password\", \"name\", \"password\", \"formControlName\", \"password\", \"id\", \"password\", 1, \"form-control\"], [\"type\", \"submit\", 1, \"btn\", \"btn-info\"], [1, \"text-danger\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3);\n        i0.ɵɵtext(4, \"Authentication\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, LoginComponent_div_5_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5)(7, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_7_listener() {\n          return ctx.handleLoginFormSubmit();\n        });\n        i0.ɵɵelementStart(8, \"div\", 7)(9, \"label\", 8);\n        i0.ɵɵtext(10, \"Username\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 7)(13, \"label\", 10);\n        i0.ɵɵtext(14, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(15, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7)(17, \"button\", 12);\n        i0.ɵɵtext(18, \"Login\");\n        i0.ɵɵelementEnd()()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.userFormGroup);\n      }\n    },\n    styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"mappings":";;;;;;IAIMA,+BAA8C;IAC5CA,YACF;IAAAA,iBAAM;;;;IADJA,eACF;IADEA,oDACF;;;ACKN,OAAM,MAAOC,cAAc;EAGzBC,YACUC,EAAe,EACfC,WAAkC,EAClCC,MAAc;IAFd,OAAE,GAAFF,EAAE;IACF,gBAAW,GAAXC,WAAW;IACX,WAAM,GAANC,MAAM;IAJhB,iBAAY,GAAW,EAAE;IAMvB,IAAI,CAACC,aAAa,GAAGH,EAAE,CAACI,KAAK,CAAC;MAC5BC,QAAQ,EAAEL,EAAE,CAACM,OAAO,CAAC,EAAE,CAAC;MACxBC,QAAQ,EAAEP,EAAE,CAACM,OAAO,CAAC,EAAE;KACxB,CAAC;EACJ;EACAE,QAAQ,IAAU;EAElBC,qBAAqB;IACnB,MAAM;MAAEJ,QAAQ;MAAEE;IAAQ,CAAE,GAAG,IAAI,CAACJ,aAAa,CAACO,KAAK;IACvD,IAAI,CAACT,WAAW,CAACU,KAAK,CAACN,QAAQ,EAAEE,QAAQ,CAAC,CAACK,SAAS,CAAC;MACnDC,IAAI,EAAGC,OAAO,IAAI;QAChB,IAAI,CAACb,WAAW,CAACc,gBAAgB,CAACD,OAAO,CAAC,CAACF,SAAS,CAAC;UACnDC,IAAI,EAAGG,IAAI,IAAI;YACbC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,WAAW,CAACkB,MAAM,EAAE,EAAE,IAAI,CAAClB,WAAW,CAACmB,OAAO,EAAE,CAAC;YAClE,IAAI,CAAClB,MAAM,CAACmB,aAAa,CAAC,WAAW,CAAC;UACxC,CAAC;UACDC,KAAK,EAAGA,KAAK,IAAI;YACf,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,OAAO;UACnC;SACD,CAAC;MACJ,CAAC;MACDF,KAAK,EAAGA,KAAK,IAAI;QACf,IAAI,CAACC,YAAY,GAAGD,KAAK,CAACE,OAAO;MACnC;KACD,CAAC;EACJ;EAAC;qBAjCU1B,cAAc;EAAA;EAAA;UAAdA,cAAc;IAAA2B;IAAAC;IAAAC;IAAAC;IAAAC;MAAA;QDX3BhC,8BAA4B;QAGGA,8BAAc;QAAAA,iBAAM;QAC7CA,+DAEM;QACNA,8BAAuB;QACaA;UAAA,OAAYiC,2BAAuB;QAAA,EAAC;QACpEjC,8BAAkB;QACyBA,yBAAQ;QAAAA,iBAAQ;QACzDA,4BAME;QACJA,iBAAM;QACNA,+BAAkB;QACyBA,yBAAQ;QAAAA,iBAAQ;QACzDA,6BAME;QACJA,iBAAM;QACNA,+BAAkB;QAC2BA,sBAAK;QAAAA,iBAAS;;;QA1BrCA,eAAkB;QAAlBA,uCAAkB;QAIpCA,eAA2B;QAA3BA,6CAA2B","names":["i0","LoginComponent","constructor","fb","authService","router","userFormGroup","group","username","control","password","ngOnInit","handleLoginFormSubmit","value","login","subscribe","next","appUser","authenticateUser","data","console","log","isUser","isAdmin","navigateByUrl","error","errorMessage","message","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/src/app/login/login.component.html","/Users/achrafbilal/Documents/GitHub/tp-controle-spring-boot/front/src/app/login/login.component.ts"],"sourcesContent":["<div class=\"container mt-5\">\n  <div class=\"col-md-6 offset-md-3\">\n    <div class=\"card\">\n      <div class=\"card-header\">Authentication</div>\n      <div class=\"text-danger\" *ngIf=\"errorMessage\">\n        {{ errorMessage }}\n      </div>\n      <div class=\"card-body\">\n        <form [formGroup]=\"userFormGroup\" (ngSubmit)=\"handleLoginFormSubmit()\">\n          <div class=\"mb-3\">\n            <label for=\"username\" class=\"form-label\">Username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              formControlName=\"username\"\n              id=\"username\"\n              class=\"form-control\"\n            />\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"password\" class=\"form-label\">Password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              formControlName=\"password\"\n              id=\"password\"\n              class=\"form-control\"\n            />\n          </div>\n          <div class=\"mb-3\">\n            <button class=\"btn btn-info\" type=\"submit\">Login</button>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</div>\n","import { AppUser } from \"./../model/user.model\";\nimport { AuthenticationService } from \"./../services/authentication.service\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-login\",\n  templateUrl: \"./login.component.html\",\n  styleUrls: [\"./login.component.scss\"],\n})\nexport class LoginComponent implements OnInit {\n  userFormGroup!: FormGroup;\n  errorMessage: string = \"\";\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthenticationService,\n    private router: Router\n  ) {\n    this.userFormGroup = fb.group({\n      username: fb.control(\"\"),\n      password: fb.control(\"\"),\n    });\n  }\n  ngOnInit(): void {}\n\n  handleLoginFormSubmit() {\n    const { username, password } = this.userFormGroup.value;\n    this.authService.login(username, password).subscribe({\n      next: (appUser) => {\n        this.authService.authenticateUser(appUser).subscribe({\n          next: (data) => {\n            console.log(this.authService.isUser(), this.authService.isAdmin());\n            this.router.navigateByUrl(\"/products\");\n          },\n          error: (error) => {\n            this.errorMessage = error.message;\n          },\n        });\n      },\n      error: (error) => {\n        this.errorMessage = error.message;\n      },\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}